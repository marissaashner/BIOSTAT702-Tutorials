---
title: "BIOSTAT702 R Tutorial 6: "
subtitle: "Chi-Square Tests"
author: "Marissa Ashner, PhD"
date: "Last Updated: 2024-10-23"
output: 
  html_document:
    theme: cosmo
    fig_width: 7
    fig_height: 5
    toc: true
    toc_float:
      collapsed: true
      smooth_scroll: true
---

```{css, echo=FALSE}
pre {
  max-height: 300px;
  overflow-y: auto;
}
h1.title{
  font-size: 30px;
  font-weight: bold;
  margin-bottom: 0px;
}
h1 {
  font-size: 20px;
}
h2{
  font-size: 16px;
}
h3.subtitle {
  font-size: 25px;
  font-style: italic;
  margin-top: 3px;
}
h3{
  font-size: 14px;
}
h4{
  font-size: 13px;
}
body, code.r, pre{
  font-size: 12px;
}
```


```{r setup, include=FALSE}
# setting global options for code chunks
knitr::opts_chunk$set(echo = TRUE, 
                      warning = FALSE)
```

This tutorial does not follow the 'usual'  [textbook](https://bookdown.org/rwnahhas/RMPH/datasumm.html), although we will use the datasets from the text for the examples.

# Packages 

The following code loads the packages you need for the tutorial.

```{r, message = FALSE}
## NOTE: If you do not have a package installed, you must install it first
# For example, you can run the following code if you don't have the gtsummary package:
# install.packages("gtsummary")


# for navigating within the R project
library(here)

# for data wrangling 
library(tidyverse)

# for effect measure analyses 
library(epitools)
library(catfun)
library(DescTools)
```

# Load Data 

The dataset used for this tutorial is loaded here.

```{r}
# Load Data 
# will be called "nhanes_adult_exam_sub" in your environment 
load(here("data/nhanes1718_adult_fast_sub_rmph.Rdata"))

# rename dataset for convenience 
nhanesf <- nhanes_adult_fast_sub
```

# Chi-square Test for Binary Outcome and Binary Predictor

Let's say our binary outcome is `ALQ151`, or the answer to the question "ever have 4/5+ drinks every day?". Our binary predictor is `RIAGENDR`, or gender.

## Contingency Table

First we can examine the contingency table. 

```{r}
table(nhanesf$RIAGENDR, nhanesf$ALQ151, useNA = "ifany") %>% 
  addmargins()

# Remove NA
nhanesf_complete = nhanesf[complete.cases(nhanesf$ALQ151),]
conting_table = table(nhanesf_complete$RIAGENDR, nhanesf_complete$ALQ151) 
conting_table %>% 
  addmargins()
```

## Chi-Square Test

We can run a chi-squared test to test that the true event rates for both genders are identical. We can do this using the `chisq.test()` function.

The test automatically uses a continuity correction, which can be changed with the argument `correct = FALSE`.

```{r}
chisq.test(conting_table)
```

## Odds Ratio 

We can use the `oddsratio()` function in the `epitools` package to estimate the Odds Ratio, it's CI and p-value from the contingency table above. We can see that the chi-square p-value lines up with the one from the `chisq.test()` function above. 

Note that for the odds ratio, you should use `method = "wald"` to obtain the same estimate as you would from calculating the odds ratio by hand. This is not the default and so it must be specified.

Note that the `epitools` package assumes that the non-reference category of your exposure is in the second row, and the outcome equivalent to $1$, or "Yes", is in the second column. If we assume we want "Male" as the reference exposure, our rows are correct. However, our columns are incorrect for this package. We can use the `rev="c"` argument to reverse the columns. You could use `rev = "r"` or `rev = "b"` to switch the rows or both rows/columns, respectively.

```{r}
oddsratio(conting_table, 
          rev = "c",
          method = "wald",
          correction = TRUE)
```

## Risk Ratio

We can similarly do this for the risk ratio...


```{r}
riskratio(conting_table, 
          rev = "c",
          correction = TRUE)
```

## Risk Difference 

... and the risk difference, which is done using the `catfun` package. This package assumes the non-reference exposure is in the first row and the outcome equal to 1 is in the first column. You can also reverse the rows or columns if needed, depending on which risk difference you are interested in.

```{r}
riskdiff(conting_table, rev = "r")
```

# Chi-Square Test for Unordered Categorical Variables 

Now let's use `RIDRETH3` (race/ethnicity), and `smoker`, from the NHANES dataset, which are both unordered categorical variables with more than two levels, to demonstrate creating contingency tables and running chi-square tests on tables larger than 2x2. The code won't change!

## Contingency Table 

```{r}
table(nhanesf$RIDRETH3, nhanesf$smoker, useNA = "ifany")
```

## Chi-Square Test 

```{r}
chisq.test(table(nhanesf$RIDRETH3, nhanesf$smoker))
```
# Chi-Square Test for Stratified 2x2 Tables 

Now we are interested in the event rate of alcohol use in gender across smoking levels. 

## Stratified Contingency Table 

```{r}
table(nhanesf_complete$RIAGENDR, 
      nhanesf_complete$ALQ151, 
      nhanesf_complete$smoker)
```

## Exploring the odds ratios in each Stratum

```{r}
# Never Smoker 
nhanesf_never = nhanesf_complete %>% filter(smoker == "Never")
oddsratio(table(nhanesf_never$RIAGENDR, nhanesf_never$ALQ151))$measure

# Past Smoker
nhanesf_past = nhanesf_complete %>% filter(smoker == "Past")
oddsratio(table(nhanesf_past$RIAGENDR, nhanesf_past$ALQ151))$measure

# Current Smoker 
nhanesf_current = nhanesf_complete %>% filter(smoker == "Current")
oddsratio(table(nhanesf_current$RIAGENDR, nhanesf_current$ALQ151))$measure
```

## Breslow Day Test for Homogeneity

Breslow Day tests for homogeneity of odds ratios across strata. It can be run in using the `BreslowDayTest()` function in the `DecsTools` package. 

```{r}
BreslowDayTest(table(nhanesf_complete$RIAGENDR, 
      nhanesf_complete$ALQ151, 
      nhanesf_complete$smoker))
```


## Cochran-Mantel-Haenszel Chi-Square Test 

We can run the CMH Chi-Square test using the `mantelhaen.test()`. As in previous functions, the default is a continuity correction but this can be turned off. The arguments also allow for an exact conditional test.

```{r}
mantelhaen.test(table(nhanesf_complete$RIAGENDR, 
      nhanesf_complete$ALQ151, 
      nhanesf_complete$smoker))
```


# Session information

```{r echo = FALSE, results = 'markup'}
sessionInfo()
```

