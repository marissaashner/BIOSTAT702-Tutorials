"0","# getting only the baseline values for smRNA data"
"0","smRNA_baseline_dat = smRNA_dat |>"
"0","  select(c(""Name"",contains(""BL"")))"
"0",""
"0","# reshaping the smRNA dataset (151 unique subject ids)"
"0","df_long = pivot_longer(smRNA_baseline_dat, cols = -Name, names_to = ""Variable"", values_to = ""Value"")"
"0",""
"0","df_wide = pivot_wider(df_long, names_from = Name, values_from = Value)"
"0","smRNA_baseline_transformed = df_wide"
"0","names(smRNA_baseline_transformed)[1] = ""subject_long_id"""
"0","smRNA_baseline_transformed$subject_id = substr(smRNA_baseline_transformed$subject_long_id, 1, 5)"
"0","smRNA_baseline_transformed = smRNA_baseline_transformed[,c(ncol(smRNA_baseline_transformed),"
"0","                                                           1:(ncol(smRNA_baseline_transformed)-1))]"
"0",""
"0",""
"0","# scaling the smRNA values"
"0","smRNA_scaled = cbind(smRNA_baseline_transformed[,1:2], smRNA_baseline_transformed[,-c(1:2)] |>"
"0","  select(where(~sum(.)>0)))"
"0","# selected only columns where count was at least 1"
"0",""
"0","smRNA_scaled[,(3:ncol(smRNA_scaled))] = apply(smRNA_scaled[, 3:ncol(smRNA_scaled)], 2, function(x) {"
"0","  if (all(x == 0)) {"
"0","    return(x)  # Return the column unchanged if all values are zero"
"0","  } else {"
"0","    return(scale(x))  # Otherwise, scale the column"
"0","  }"
"0","})"
"0","smRNA_scaled = smRNA_scaled |> select(-subject_long_id)"
"0",""
"0","# subset only the people with at least one ERD from ERD_dat"
"0","## all rows/patients have at least one ERD values"
"0","ERD_columns = c(names(ERD_dat)[2:5])"
"0","ERD_filtered_dat = ERD_dat[apply(ERD_dat[ERD_columns], 1, function(row) any(!is.na(row))), ]"
"0",""
"0","ERD_sc_dat = ERD_filtered_dat |>"
"0","  filter(!is.na(ERD_stepcounts)) |>"
"0","  select(subject_id, scaled_stepcounts)"
"0",""
"0","# 101 patients in the sc dataset"
"0","final_sc_smRNA = inner_join(ERD_sc_dat, smRNA_scaled, by = ""subject_id"") |>"
"0","  select(-subject_id) "
